apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      files:
        - path: /etc/containerd/config.toml
          content: |
            version = 2
            [plugins]
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
 #           cloud-provider: external
            provider-id: openstack:///'{{ instance_id }}'
            node-labels: "topology.kubernetes.io/zone=eu-west-1"
          name: '{{ local_hostname }}'
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  labels:
    cni: calico
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 172.16.0.0/12 # CIDR block used by calico
    serviceDomain: cluster.local
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OpenStackCluster
    name: ${CLUSTER_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: 3
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      clusterName: ${CLUSTER_NAME}
      failureDomain: eu-west-1
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: OpenStackMachineTemplate
        name: ${CLUSTER_NAME}-md-0
      version: ${KUBERNETES_VERSION}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      dns:
        imageTag: 1.9.3 # DNS image tag
      apiServer:
        extraArgs:
          #cloud-provider: external
      controllerManager:
        extraArgs:
          #cloud-provider: external
    files:
      - path: /etc/containerd/config.toml
        content: |
          version = 2
#         #add you custom containerd config here 
      - path: /etc/kubernetes/manifests/kube-vip.yaml
        content: |
          apiVersion: v1
          kind: Pod
          metadata:
            creationTimestamp: null
            name: kube-vip
            namespace: kube-system
          spec:
            containers:
            - args:
              - manager
              env:
              - name: vip_arp
                value: "true"
              - name: port
                value: "6443"
              - name: vip_interface
                value: ens3
              - name: vip_cidr
                value: "32"
              - name: cp_enable
                value: "true"
              - name: cp_namespace
                value: kube-system
              - name: vip_ddns
                value: "false"
              - name: svc_enable
                value: "true"
              - name: vip_leaderelection
                value: "true"
              - name: vip_leaseduration
                value: "5"
              - name: vip_renewdeadline
                value: "3"
              - name: vip_retryperiod
                value: "1"
              - name: address
                value: ${CLUSTER_API_IP}
              image: ghcr.io/kube-vip/kube-vip:v0.8.10
              imagePullPolicy: Always
              name: kube-vip
              resources: {}
              securityContext:
                capabilities:
                  add:
                  - NET_ADMIN
                  - NET_RAW
                  - SYS_TIME
              volumeMounts:
              - mountPath: /etc/kubernetes/admin.conf
                name: kubeconfig
            hostAliases:
            - hostnames:
              - kubernetes
              ip: 127.0.0.1
            hostNetwork: true
            volumes:
            - hostPath:
                path: /etc/kubernetes/super-admin.conf
              name: kubeconfig
          status: {}
    postKubeadmCommands:
      - "sed -i 's#path: /etc/kubernetes/super-admin.conf#path: /etc/kubernetes/admin.conf#' /etc/kubernetes/manifests/kube-vip.yaml"
      # https://github.com/kube-vip/kube-vip/issues/684
    ntp:
      servers:
        - 0.fr.pool.ntp.org
        - 1.fr.pool.ntp.org
        - 2.fr.pool.ntp.org
      enabled: true
    initConfiguration:
      localAPIEndpoint:
        advertiseAddress: '{{ ds.ec2_metadata.local_ipv4 }}'
        bindPort: 6443
      nodeRegistration:
        kubeletExtraArgs:
          #cloud-provider: external
          provider-id: openstack:///'{{ instance_id }}'
        name: '{{ local_hostname }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          #cloud-provider: external
          provider-id: openstack:///'{{ instance_id }}'
        name: '{{ local_hostname }}'
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: OpenStackMachineTemplate
      name: ${CLUSTER_NAME}-control-plane
  replicas: 3
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackCluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  identityRef:
    cloudName: ${OPENSTACK_CLOUD}
    name: ${CLUSTER_NAME}-cloud-config
  apiServerFixedIP: ${CLUSTER_API_IP}
  apiServerLoadBalancer:
    enabled: false
  disableAPIServerFloatingIP: true
  apiServerPort: 6443
  managedSecurityGroups:
    allNodesSecurityGroupRules:
    - description: Created by cluster-api-provider-openstack - SSH (admin)
      direction: ingress
      etherType: IPv4
      name: SSH (Admin)
      portRangeMax: 22
      portRangeMin: 22
      protocol: tcp
      remoteIPPrefix: 0.0.0.0/0
    - description: Created by cluster-api-provider-openstack - PING (vip)
      direction: ingress
      etherType: IPv4
      name: PING (vip)
      protocol: ICMP
      remoteIPPrefix: 0.0.0.0/0
    - remoteManagedGroups:
      - controlplane
      - worker
      direction: ingress
      etherType: IPv4
      name: BGP (Calico)
      portRangeMin: 179
      portRangeMax: 179
      protocol: tcp
      description: "Allow BGP between control plane and workers"
    - remoteManagedGroups:
      - controlplane
      - worker
      direction: ingress
      etherType: IPv4
      name: IP-in-IP (Calico)
      protocol: "4"
      description: "Allow IP-in-IP between control plane and workers"
  # Configure it when you use a valid DNS
  # controlPlaneEndpoint:
  #   host: ${CLUSTER_API_DNS}
  #   port: 6443
  network:
    id: ${OPENSTACK_NETWORK_ID}
  subnets:
  - id: ${OPENSTACK_SUBNET_ID}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  template:
    spec:
      flavor: ${OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR}
      image:
        filter:
          name: ${OPENSTACK_IMAGE_NAME}
      ports:
        - network:
            id: ${OPENSTACK_NETWORK_ID}
          allowedAddressPairs: 
            - ipAddress: ${CLUSTER_API_IP}
          fixedIPs:
            - subnet:
                id: ${OPENSTACK_SUBNET_ID}
        - network:
            id: ${OPENSTACK_ADM_NETWORK_ID}
          fixedIPs:
            - subnet:
                id: ${OPENSTACK_ADM_SUBNET_ID}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      flavor: ${OPENSTACK_NODE_MACHINE_FLAVOR}
      image:
        filter:
          name: ${OPENSTACK_IMAGE_NAME}
      rootVolume:
        sizeGiB: 40
        type: standard
        availabilityZone:
          name: eu-west-1
      ports:
        - network:
            id: ${OPENSTACK_NETWORK_ID}
          allowedAddressPairs: 
            - ipAddress: ${CLUSTER_API_IP}
          fixedIPs:
            - subnet:
                id: ${OPENSTACK_SUBNET_ID}
        - network:
            id: ${OPENSTACK_ADM_NETWORK_ID}
          fixedIPs:
            - subnet:
                id: ${OPENSTACK_ADM_SUBNET_ID}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}

